@model ProductManagmentProject.Models.User

@{
    ViewData["Title"] = "Hồ sơ người dùng";
}

<h2 class="mb-3">Hồ sơ người dùng</h2>

<div class="card shadow-sm p-4 mb-4">
    <div class="row">
        <div class="col-md-12">
            <dl class="row">
                <dt class="col-sm-4">Họ và tên:</dt>
                <dd class="col-sm-8">@Model.FullName</dd>

                <dt class="col-sm-4">Email:</dt>
                <dd class="col-sm-8">@Model.Email</dd>

                <dt class="col-sm-4">Tên người dùng:</dt>
                <dd class="col-sm-8">@Model.Username</dd>

                <dt class="col-sm-4">Vai trò:</dt>
                <dd class="col-sm-8">@Model.Role</dd>

                <dt class="col-sm-4">Ngày tạo:</dt>
                <dd class="col-sm-8">@Model.CreatedAt?.ToString("yyyy-MM-dd HH:mm")</dd>
            </dl>
        </div>
    </div>
</div>

<h3 class="mb-3">Danh sách đơn hàng</h3>
@if (Model.Orders.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th>Mã đơn hàng</th>
                    <th>Ngày đặt</th>
                    <th>Tổng tiền</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td>@order.OrderId</td>
                        <td>@order.OrderDate?.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@order.TotalAmount.ToString("C0")</td>
                        <td>@order.Status</td>
                        <td>
                            <a asp-action="OrderDetail" asp-controller="User" asp-route-id="@order.OrderId" class="btn btn-sm btn-primary">Xem chi tiết</a>
                            <button class="btn btn-sm btn-danger cancel-order-btn" data-order-id="@order.OrderId">Hủy</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="text-muted">Bạn chưa có đơn hàng nào.</p>
}

<div class="mt-3">
    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Quay lại</a>
</div>

<form id="__AjaxAntiForgeryForm" action="#" method="post">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        $(document).ready(function () {
            $('.cancel-order-btn').click(function () {
                var orderId = $(this).data('order-id');
                Swal.fire({
                    title: 'Xác nhận hủy đơn hàng',
                    text: 'Bạn có chắc muốn hủy đơn hàng này?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Hủy đơn hàng',
                    cancelButtonText: 'Quay lại'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("CancelOrder", "User")',
                            type: 'POST',
                            data: { id: orderId },
                            headers: {
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire('Đã hủy!', 'Đơn hàng đã được hủy thành công.', 'success')
                                        .then(() => location.reload());
                                } else {
                                    Swal.fire('Lỗi!', response.message, 'error');
                                }
                            },
                            error: function (xhr) {
                                Swal.fire('Lỗi!', 'Không thể hủy đơn hàng: ' + xhr.statusText, 'error');
                            }
                        });
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Kết nối SignalR
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub")
                .withAutomaticReconnect()
                .build();

            // Xử lý thông báo và cập nhật trạng thái
            connection.on("ReceiveOrderNotification", function (data) {
                console.log("Received SignalR notification:", data);

                // Hiển thị thông báo
                Swal.fire({
                    title: 'Thông báo đơn hàng',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                });

                // Cập nhật trạng thái trong bảng
                const row = $(`#orderTable tr[data-order-id='${data.orderId}']`);
                console.log("Found row:", row.length, "OrderId:", data.orderId);
                if (row.length) {
                    row.find('.order-status').text(data.status);
                } else {
                    console.warn("Row not found for OrderId:", data.orderId);
                }
            });

            // Bắt đầu kết nối
            connection.start().then(function () {
                console.log("SignalR connected successfully");
            }).catch(function (err) {
                console.error('SignalR connection error:', err.toString());
            });
        });
    </script>
    </script>
}